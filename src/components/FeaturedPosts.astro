---
import type { CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';

interface Props {
  posts: CollectionEntry<'blog'>[];
}

const { posts } = Astro.props;
---

<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
  {posts.map((post) => (
    <article class="glass rounded-xl overflow-hidden hover:ring-2 ring-primary-500 transition-all">
      {post.data.heroImage && (
        <div class="relative h-48 overflow-hidden">
          <Image
            src={post.data.heroImage}
            alt={`Cover image for ${post.data.title}`}
            width={800}
            height={400}
            class="object-cover w-full h-full"
          />
        </div>
      )}
      <div class="p-6">
        <div class="flex gap-2 mb-4">
          {post.data.categories.map((category) => (
            <span class="px-3 py-1 text-sm bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full">
              {category}
            </span>
          ))}
        </div>
        
        <h3 class="text-xl font-semibold mb-2 text-gray-800 dark:text-gray-100">
          <a href={`/blog/${post.slug}`} class="hover:text-primary-500 transition-colors">
            {post.data.title}
          </a>
        </h3>
        
        <p class="text-gray-600 dark:text-gray-400 mb-4 line-clamp-2">
          {post.data.description}
        </p>
        
        <div class="flex items-center justify-between text-sm text-gray-500 dark:text-gray-400">
          <span>{post.data.author}</span>
          <time datetime={post.data.pubDate.toISOString()}>
            {new Intl.DateTimeFormat('fi-FI', { 
              year: 'numeric', 
              month: 'short', 
              day: 'numeric' 
            }).format(post.data.pubDate)}
          </time>
        </div>
      </div>
    </article>
  ))}
</div>