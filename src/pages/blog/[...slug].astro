---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { Image } from 'astro:assets';
import ShareButtons from '../../components/ShareButtons.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();

const url = new URL(Astro.url.pathname, Astro.site).toString();
---

<Layout 
  title={post.data.title} 
  description={post.data.description}
  image={post.data.heroImage}
  type="article"
  publishDate={post.data.pubDate}
  modifiedDate={post.data.updatedDate}
  author={post.data.author}
>
  <article class="max-w-4xl mx-auto">
    {post.data.heroImage && (
      <div class="mb-8 rounded-xl overflow-hidden">
        <Image
          src={post.data.heroImage}
          alt={post.data.title}
          width={1200}
          height={600}
          class="w-full h-[400px] object-cover"
        />
      </div>
    )}
    
    <header class="mb-8">
      <div class="flex gap-2 mb-4">
        {post.data.categories.map((category) => (
          <a
            href={`/categories/${category.toLowerCase().replace(/\s+/g, '-')}`}
            class="px-3 py-1 text-sm bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full hover:bg-primary-200 dark:hover:bg-primary-800 transition-colors"
          >
            {category}
          </a>
        ))}
      </div>
      
      <h1 class="text-4xl font-bold mb-4 text-gray-900 dark:text-gray-100">
        {post.data.title}
      </h1>
      
      <div class="flex items-center justify-between text-gray-600 dark:text-gray-400">
        <span>{post.data.author}</span>
        <time datetime={post.data.pubDate.toISOString()}>
          {new Intl.DateTimeFormat('en-US', { 
            year: 'numeric', 
            month: 'long', 
            day: 'numeric' 
          }).format(post.data.pubDate)}
        </time>
      </div>

      <div class="mt-4">
        <ShareButtons 
          url={url}
          title={post.data.title}
          description={post.data.description}
        />
      </div>
    </header>
    
    <div class="prose dark:prose-invert max-w-none">
      <Content />
    </div>
    
    <footer class="mt-8 pt-8 border-t border-gray-200 dark:border-gray-800">
      <div class="flex flex-wrap gap-2">
        {post.data.tags.map((tag) => (
          <a
            href={`/tags/${tag.toLowerCase().replace(/\s+/g, '-')}`}
            class="px-2 py-1 text-sm bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors"
          >
            #{tag}
          </a>
        ))}
      </div>
    </footer>
  </article>
</Layout>